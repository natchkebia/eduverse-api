generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model User {
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model prisma_migrations {
// @@map("_prisma_migrations")
// }

enum Role {
  STUDENT
  INSTRUCTOR
  ADMIN
}

model User {
  id        String   @id @default(uuid()) // üëà ·Éê·É• uuid()
  email     String   @unique
  password  String
  name      String
  surname   String?
  phone     String?  @unique
  role      Role     @default(STUDENT)
  createdAt DateTime @default(now())
}

model Course {
  id               Int          @id @default(autoincrement())
  slug             String       @unique
  originalPrice    Int
  discountedPrice  Int
  discount         String
  imageUrl         String
  isOnline         Boolean      @default(false)
  isGeorgia        Boolean      @default(true)

  titleKa          String
  titleEn          String
  descriptionKa    String
  descriptionEn    String
  altTextKa        String
  altTextEn        String
  buttonKa         String
  buttonEn         String
  formatKa         String
  formatEn         String
  languageKa       String
  languageEn       String

  syllabusKa       String?
  syllabusEn       String?
  mentorKa         String?
  mentorEn         String?

  // üîπ ·Éê·ÉÆ·Éê·Éö·Éò ·É£·É†·Éó·Éò·Éî·É†·Éó·Éù·Éë·Éî·Éë·Éò
  videos           Video[]
  materials        Material[]

  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
}

model Video {
  id        Int     @id @default(autoincrement())
  url       String
  courseId  Int
  course    Course  @relation(fields: [courseId], references: [id])
}

model Material {
  id        Int     @id @default(autoincrement())
  link      String
  courseId  Int
  course    Course  @relation(fields: [courseId], references: [id])
}










